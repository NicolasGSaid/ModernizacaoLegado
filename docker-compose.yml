version: '3.8'

services:
  # ============================================
  # SQL Server Database
  # ============================================
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: legacyprocs-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SA_PASSWORD:-LegacyProcs@2025}
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
      - ./database:/docker-entrypoint-initdb.d
    networks:
      - legacyprocs-network
    restart: unless-stopped
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "$${SA_PASSWORD}" -Q "SELECT 1" || exit 1
      interval: 30s
      timeout: 3s
      retries: 5
      start_period: 30s

  # ============================================
  # Backend API (.NET 8)
  # ============================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: legacyprocs-backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=LegacyProcs;User Id=sa;Password=${SA_PASSWORD:-LegacyProcs@2025};TrustServerCertificate=True;MultipleActiveResultSets=true
      - Cors__AllowedOrigins__0=http://localhost:4200
      - Cors__AllowedOrigins__1=http://localhost
    ports:
      - "5000:8080"
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      - legacyprocs-network
    restart: unless-stopped
    healthcheck:
      test: curl -f http://localhost:8080/health || exit 1
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s

  # ============================================
  # Frontend (Angular 18 + Nginx)
  # ============================================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: legacyprocs-frontend
    ports:
      - "4200:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - legacyprocs-network
    restart: unless-stopped
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost/ || exit 1
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

# ============================================
# Networks
# ============================================
networks:
  legacyprocs-network:
    driver: bridge
    name: legacyprocs-network

# ============================================
# Volumes
# ============================================
volumes:
  sqlserver-data:
    name: legacyprocs-sqlserver-data
