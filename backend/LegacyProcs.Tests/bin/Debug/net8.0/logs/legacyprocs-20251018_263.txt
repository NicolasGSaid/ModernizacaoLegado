2025-10-18 23:31:56.763 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":"Backup","Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"1425b54f-a6a1-4604-a9de-6e96c315a39f","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMULB5UH1","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:31:56.767 -03:00 [ERR] Erro no health check do banco de dados {"SourceContext":"LegacyProcs.Infrastructure.HealthChecks.DatabaseHealthCheck","HealthCheckName":"database","RequestId":"0HNGEMULB5UH3","RequestPath":"/health","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.get_Instance()
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.InfrastructureExtensions.GetService(IInfrastructure`1 accessor, Type serviceType)
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.InfrastructureExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.get_Dependencies()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependenciesAccessor.get_Dependencies()
   at Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetFacadeDependencies(DatabaseFacade databaseFacade)
   at Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetConnectionString(DatabaseFacade databaseFacade)
   at LegacyProcs.Infrastructure.HealthChecks.DatabaseHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\HealthChecks\DatabaseHealthCheck.cs:line 49
2025-10-18 23:31:56.776 -03:00 [INF] Listando ordens de serviço. Filtro: Backup, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"1425b54f-a6a1-4604-a9de-6e96c315a39f","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMULB5UH1","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:31:56.778 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 14ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"1425b54f-a6a1-4604-a9de-6e96c315a39f","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMULB5UH1","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at System.Linq.Queryable.Where[TSource](IQueryable`1 source, Expression`1 predicate)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 60
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:31:56.782 -03:00 [INF] Iniciando ObterOrdemServicoPorIdQuery: {"Id":999999,"$type":"ObterOrdemServicoPorIdQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"66088a48-51be-4f1a-bd2c-34b3b9de0c4b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMULB5UH2","RequestPath":"/api/ordemservico/999999","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:31:56.783 -03:00 [INF] Buscando ordem de serviço por ID: 999999 {"SourceContext":"LegacyProcs.Application.Queries.ObterOrdemServicoPorIdQueryHandler","ActionId":"66088a48-51be-4f1a-bd2c-34b3b9de0c4b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMULB5UH2","RequestPath":"/api/ordemservico/999999","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:31:56.785 -03:00 [ERR] Erro em ObterOrdemServicoPorIdQuery após 3ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"66088a48-51be-4f1a-bd2c-34b3b9de0c4b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMULB5UH2","RequestPath":"/api/ordemservico/999999","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_Finder()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.FindAsync(Object[] keyValues)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetByIdAsync(Int32 id) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 22
   at LegacyProcs.Application.Queries.ObterOrdemServicoPorIdQueryHandler.Handle(ObterOrdemServicoPorIdQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ObterOrdemServicoPorIdQueryHandler.cs:line 30
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:31:56.807 -03:00 [ERR] Erro inesperado ao buscar ordem de serviço por ID: 999999 {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"66088a48-51be-4f1a-bd2c-34b3b9de0c4b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMULB5UH2","RequestPath":"/api/ordemservico/999999","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_Finder()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.FindAsync(Object[] keyValues)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetByIdAsync(Int32 id) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 22
   at LegacyProcs.Application.Queries.ObterOrdemServicoPorIdQueryHandler.Handle(ObterOrdemServicoPorIdQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ObterOrdemServicoPorIdQueryHandler.cs:line 30
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(Int32 id) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 115
2025-10-18 23:31:56.809 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"66088a48-51be-4f1a-bd2c-34b3b9de0c4b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMULB5UH2","RequestPath":"/api/ordemservico/999999","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:31:56.815 -03:00 [INF] Request starting HTTP/1.1 POST http://localhost/api/cliente - application/json; charset=utf-8 150 {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMULB5UH4","RequestPath":"/api/cliente","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:31:56.818 -03:00 [WRN] Input sanitizado para /api/cliente de Unknown. Conteúdo potencialmente malicioso removido. {"SourceContext":"LegacyProcs.Infrastructure.Middleware.InputSanitizationMiddleware","RequestId":"0HNGEMULB5UH4","RequestPath":"/api/cliente","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:31:56.832 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.ClienteController.Post (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMULB5UH4","RequestPath":"/api/cliente","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:31:56.880 -03:00 [INF] Route matched with {action = "Post", controller = "Cliente"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(LegacyProcs.Controllers.DTOs.ClienteCreateDto) on controller LegacyProcs.Controllers.ClienteController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"49475390-4081-4ebf-8f7a-6024eb623b3e","ActionName":"LegacyProcs.Controllers.ClienteController.Post (LegacyProcs)","RequestId":"0HNGEMULB5UH4","RequestPath":"/api/cliente","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:31:56.898 -03:00 [INF] Executed action LegacyProcs.Controllers.ClienteController.Post (LegacyProcs) in 17.424ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMULB5UH4","RequestPath":"/api/cliente","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:31:56.899 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.ClienteController.Post (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMULB5UH4","RequestPath":"/api/cliente","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:31:56.899 -03:00 [WRN] Resposta com erro 400 para /api/cliente de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMULB5UH4","RequestPath":"/api/cliente","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:31:56.899 -03:00 [INF] Request finished HTTP/1.1 POST http://localhost/api/cliente - 400 null application/problem+json; charset=utf-8 84.4278ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMULB5UH4","RequestPath":"/api/cliente","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:31:56.904 -03:00 [INF] Route matched with {action = "Post", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(LegacyProcs.Controllers.DTOs.OrdemServicoCreateDto) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"a22a1051-ed3a-46a6-936b-1a9e1a2fa09a","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Post (LegacyProcs)","RequestId":"0HNGEMULB5UH6","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:31:56.903 -03:00 [INF] Route matched with {action = "Get", controller = "Tecnico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.TecnicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"4a7f615e-3bf5-4d07-8d4e-8105821247df","ActionName":"LegacyProcs.Controllers.TecnicoController.Get (LegacyProcs)","RequestId":"0HNGEMULB5UH5","RequestPath":"/api/tecnico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:31:56.967 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Post (LegacyProcs) in 62.2921ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMULB5UH6","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:31:57.051 -03:00 [INF] Executed action LegacyProcs.Controllers.TecnicoController.Get (LegacyProcs) in 135.8745ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMULB5UH5","RequestPath":"/api/tecnico","Application":"LegacyProcs","Environment":"Production"}
