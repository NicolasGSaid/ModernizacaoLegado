2025-10-18 23:27:53.120 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB2K","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.120 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB2L","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.120 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/cliente?page=1&pageSize=10 - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB2N","RequestPath":"/api/cliente","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.120 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB2M","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.121 -03:00 [ERR] Erro no health check do banco de dados {"SourceContext":"LegacyProcs.Infrastructure.HealthChecks.DatabaseHealthCheck","HealthCheckName":"database","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.get_Instance()
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.InfrastructureExtensions.GetService(IInfrastructure`1 accessor, Type serviceType)
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.InfrastructureExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.get_Dependencies()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependenciesAccessor.get_Dependencies()
   at Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetFacadeDependencies(DatabaseFacade databaseFacade)
   at Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetConnectionString(DatabaseFacade databaseFacade)
   at LegacyProcs.Infrastructure.HealthChecks.DatabaseHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\HealthChecks\DatabaseHealthCheck.cs:line 49
2025-10-18 23:27:53.122 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB2O","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.122 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB2P","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.123 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB2Q","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.123 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB2R","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.123 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB2S","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.123 -03:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"e4bb0297-7205-48b0-bf5e-83bb6521e554","ActionName":"LegacyProcs.Controllers.TecnicoController.Post (LegacyProcs)","RequestId":"0HNGEMSD0AB2I","RequestPath":"/api/tecnico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.123 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB2T","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.131 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.ClienteController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB2N","RequestPath":"/api/cliente","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.131 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB2T","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.131 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB2R","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.131 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB2Q","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.131 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB2O","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.131 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB2L","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.131 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB2K","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.131 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB2S","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.131 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB2M","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.132 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB2U","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.131 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB2P","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.133 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB2U","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.135 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2S","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.135 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2T","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.135 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2L","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.135 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2O","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.136 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2T","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.136 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2T","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.136 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2O","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.136 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2L","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.136 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2L","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.136 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 0ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2T","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.135 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2Q","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.138 -03:00 [ERR] Health check database with status "Unhealthy" completed after 16.7872ms with message 'Erro na conexão: InvalidOperationException' {"EventId":{"Id":103,"Name":"HealthCheckEnd"},"SourceContext":"Microsoft.Extensions.Diagnostics.HealthChecks.DefaultHealthCheckService","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.138 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB2V","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.138 -03:00 [INF] Route matched with {action = "Get", controller = "Cliente"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.ClienteController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"1ee023ae-0e95-408f-9783-5d453f360cb8","ActionName":"LegacyProcs.Controllers.ClienteController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2N","RequestPath":"/api/cliente","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.138 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2Q","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.138 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2Q","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.136 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2S","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.139 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2S","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.139 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 0ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2Q","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.137 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 0ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2L","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.135 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2R","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.137 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2U","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.140 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2Q","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.141 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2R","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.141 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2R","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.137 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2P","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.142 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 0ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2R","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.136 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2M","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.139 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2T","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.139 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB2V","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.136 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2O","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.139 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 3ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2S","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.140 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2L","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.141 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2U","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.141 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2Q","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.138 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2K","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.167 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2P","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.169 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 31.7778ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB2Q","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.169 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2P","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.170 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB2Q","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.170 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2L","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.170 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB2Q","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.168 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2R","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.168 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 32ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2O","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.168 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2T","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.169 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2S","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.169 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2U","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.168 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2M","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.168 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2V","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.170 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 34.3873ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB2L","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.170 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 47.0332ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB2Q","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.172 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB2L","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.170 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2K","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.170 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 3ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2P","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.171 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2R","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.171 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 35.5718ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB2T","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.171 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2O","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.173 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2P","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.172 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2M","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.172 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2S","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.172 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 31ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2U","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.172 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB2L","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.172 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB30","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.172 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2K","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.172 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2V","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.172 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 32.5587ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB2R","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.173 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB2T","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.174 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2U","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.173 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2O","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.174 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 38.6624ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB2S","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.174 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 6ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2M","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.174 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2P","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.174 -03:00 [INF] Iniciando ListarClientesQuery: {"Busca":null,"Page":1,"PageSize":10,"$type":"ListarClientesQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"1ee023ae-0e95-408f-9783-5d453f360cb8","ActionName":"LegacyProcs.Controllers.ClienteController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2N","RequestPath":"/api/cliente","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.176 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2U","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.176 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 33.8941ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB2P","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.174 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2V","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.176 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB2P","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.174 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 4ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2K","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.175 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB2T","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.175 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB30","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.175 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB2S","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.176 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 4ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2V","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.174 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 53.5883ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB2L","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.176 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 35.619ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB2U","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.174 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB2R","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.176 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB2P","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.176 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2M","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.176 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 52.9504ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB2T","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.175 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 39.4481ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB2O","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.176 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB30","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.178 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB32","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.177 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2K","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.177 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB2U","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.177 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB2R","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.177 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 54.7712ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB2P","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.178 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB32","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.177 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB31","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.177 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2V","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.176 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB2S","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.178 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB2O","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.178 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2M","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.178 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB30","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.179 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB2O","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.179 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB31","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.178 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB2U","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.178 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 55.4975ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB2R","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.178 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB33","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.179 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB32","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.180 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB34","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.179 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2K","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.179 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 55.9296ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB2S","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.179 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 12.1118ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB2M","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.180 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB35","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.179 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB30","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.180 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB33","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.179 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 57.3796ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB2O","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.179 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2V","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.180 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB33","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.179 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB31","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.179 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 47.2297ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB2U","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.180 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 8.5991ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB2V","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.180 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB2M","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.180 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB31","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.180 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB32","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.180 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB34","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.180 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB36","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.180 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 2ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB30","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.180 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB35","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.180 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 10.4115ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB2K","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.180 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB37","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.181 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB35","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.180 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB2V","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.180 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB33","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.181 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB2M","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.181 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB2V","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.181 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB31","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.182 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 61.1331ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB2M","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.182 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB37","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.182 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB30","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.181 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB34","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.181 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB36","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.181 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB2K","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.181 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB33","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.182 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 43.7753ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB2V","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.183 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB2K","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.183 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB30","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.183 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 62.467ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB2K","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.183 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 5.1647ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB30","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.183 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 2ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB33","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.182 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB37","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.182 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 1ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB31","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.181 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB32","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.184 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB33","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.182 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB35","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.183 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB39","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.183 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB34","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.183 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB30","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.185 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB34","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.182 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB38","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.185 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 2ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB34","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.184 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB37","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.184 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB31","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.184 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 4ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB32","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.183 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB36","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.187 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB31","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.187 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 7.1236ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB31","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.187 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB38","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.188 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB31","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.188 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB36","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.188 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB31","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.188 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB32","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.185 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB30","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.185 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB33","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.183 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3A","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.186 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB37","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.189 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB32","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.187 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB39","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.188 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB38","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.188 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 10.6777ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB31","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.185 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB35","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.189 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 5ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB37","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.188 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 16.5262ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB30","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.189 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 8.3077ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB33","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.187 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB34","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.189 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 9.1975ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB32","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.188 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB36","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.190 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB32","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.189 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB39","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.189 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3A","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.189 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 7ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB35","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.189 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB38","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.190 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB33","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.200 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB38","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.200 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB33","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.190 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3C","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.190 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB37","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.190 -03:00 [ERR] Erro em ListarClientesQuery após 16ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"1ee023ae-0e95-408f-9783-5d453f360cb8","ActionName":"LegacyProcs.Controllers.ClienteController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2N","RequestPath":"/api/cliente","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.ClienteRepository.GetPagedAsync(Int32 page, Int32 pageSize, String busca) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\ClienteRepository.cs:line 67
   at LegacyProcs.Application.Queries.ListarClientesQueryHandler.Handle(ListarClientesQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarClientesQueryHandler.cs:line 29
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.189 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3B","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.199 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB32","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.199 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3A","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.199 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 11ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB36","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.199 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB34","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.199 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB39","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.200 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB35","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.200 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 21.4582ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB33","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.200 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 10ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB38","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.201 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3C","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.201 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB37","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.202 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB35","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.201 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 23.4473ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB32","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.202 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 18.8905ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB37","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.202 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB38","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.202 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3B","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.202 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB39","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.202 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 19.1882ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB34","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.202 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB36","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.202 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3D","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.202 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3C","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.201 -03:00 [ERR] Erro inesperado ao listar clientes {"SourceContext":"LegacyProcs.Controllers.ClienteController","ActionId":"1ee023ae-0e95-408f-9783-5d453f360cb8","ActionName":"LegacyProcs.Controllers.ClienteController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB2N","RequestPath":"/api/cliente","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.ClienteRepository.GetPagedAsync(Int32 page, Int32 pageSize, String busca) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\ClienteRepository.cs:line 67
   at LegacyProcs.Application.Queries.ListarClientesQueryHandler.Handle(ListarClientesQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarClientesQueryHandler.cs:line 29
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.ClienteController.Get(String busca, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\ClienteController.cs:line 48
2025-10-18 23:27:53.202 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 21.0442ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB35","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.204 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3D","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.202 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB37","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.203 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3E","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.204 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3D","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.203 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3B","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.203 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB34","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.203 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB38","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.203 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 3ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB39","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.204 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB36","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.204 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3C","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.205 -03:00 [INF] Executed action LegacyProcs.Controllers.ClienteController.Get (LegacyProcs) in 66.4911ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB2N","RequestPath":"/api/cliente","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.204 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB35","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.204 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB37","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.204 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB34","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.205 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB35","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.204 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3D","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.204 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3B","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.204 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 15.4911ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB38","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.205 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3E","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.205 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB38","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.202 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3A","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.205 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 17.5206ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB36","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.205 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3A","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.205 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB36","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.205 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB39","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.206 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 4ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3A","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.205 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 25.4411ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB34","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.206 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB39","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.205 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 25.1938ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB35","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.206 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3F","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.205 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3B","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.205 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3E","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.205 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB38","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.206 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3A","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.207 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3E","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.205 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3C","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.207 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3E","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.205 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB36","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.205 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 24.5144ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB37","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.205 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3D","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.207 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 26.7358ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB36","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.206 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3G","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.207 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 2ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3D","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.206 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 2ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3B","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.207 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3F","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.205 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.ClienteController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB2N","RequestPath":"/api/cliente","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.208 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3D","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.207 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3H","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.207 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 3ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3C","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.207 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 0ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3E","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.209 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3C","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.206 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 24.5009ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB38","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.210 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3E","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.208 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3G","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.206 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 7.7015ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB39","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.208 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3F","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.210 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB39","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.208 -03:00 [WRN] Resposta com erro 500 para /api/cliente de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB2N","RequestPath":"/api/cliente","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.208 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3B","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.210 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3F","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.207 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3A","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.209 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3H","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.207 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3I","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.211 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 9.6087ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB3A","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.211 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3H","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.210 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3C","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.210 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3G","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.210 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3E","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.210 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB39","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.210 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/cliente?page=1&pageSize=10 - 500 null text/plain; charset=utf-8 89.7913ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB2N","RequestPath":"/api/cliente","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.211 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3H","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.211 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 28.3808ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB39","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.210 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3J","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.211 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3B","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.211 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3I","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.211 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3L","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.211 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 7.2717ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB3B","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.211 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 7.5726ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB3C","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.211 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 4.7468ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB3E","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.209 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3D","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.212 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3E","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.211 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3F","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.211 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3G","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.212 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3L","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.211 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3A","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.212 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3G","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.212 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3L","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.212 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB3A","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.212 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3C","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.212 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 7.6279ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB3D","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.212 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3J","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.212 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3D","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.212 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB3E","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.211 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3H","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.211 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3K","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.211 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3I","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.212 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3B","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.212 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 1ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3F","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.212 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB3C","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.212 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 28.9619ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3A","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.213 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3K","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.213 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 23.316ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3C","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.212 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3J","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.213 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3K","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.212 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB3D","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.212 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3L","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.212 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 9.8762ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3E","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.213 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB3B","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.213 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3J","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.213 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3O","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.213 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 24.3922ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3B","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.212 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 1ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3G","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.213 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3M","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.213 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3N","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.213 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3F","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.213 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 11.1375ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3D","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.213 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3L","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.214 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3N","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.213 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 1ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3H","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.213 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3I","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.213 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3J","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.215 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3I","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.214 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3O","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.214 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3G","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.213 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3K","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.214 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3M","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.214 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3Q","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.230 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3K","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.215 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 2ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3L","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.231 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 17ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3K","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.214 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3P","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.230 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3O","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.230 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3H","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.230 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 16ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3J","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.230 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 16ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3I","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.214 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3N","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.230 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3M","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.230 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3G","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.215 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3F","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.231 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3Q","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.232 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3J","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.231 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3L","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.231 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3O","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.232 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3K","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.232 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3P","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.232 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3H","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.232 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 21.4285ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB3G","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.232 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 22.3383ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB3F","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.234 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 22.9767ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB3H","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.234 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3F","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.233 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3Q","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.234 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3K","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.233 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3M","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.233 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3I","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.233 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3J","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.233 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3O","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.234 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3L","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.234 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3P","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.234 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3G","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.235 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 22.8356ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB3L","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.235 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3I","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.235 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB3G","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.234 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB3F","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.234 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 21.0413ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB3K","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.235 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3P","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.234 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3Q","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.235 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 21.6183ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB3J","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.235 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3L","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.235 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3J","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.233 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3N","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.234 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3H","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.236 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3N","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.235 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 3ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3O","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.235 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 22.6318ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB3I","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.234 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3M","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.236 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3I","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.235 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 29.1992ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3F","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.235 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3K","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.235 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3P","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.235 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3Q","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.236 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB3K","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.236 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB3J","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.236 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB3H","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.237 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 1ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3P","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.235 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 29.0485ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3G","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.236 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB3I","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.237 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3O","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.236 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB3L","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.236 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3R","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.237 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 4ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3M","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.238 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3O","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.237 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 27.0353ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3J","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.237 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 25.3873ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3K","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.237 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 29.8185ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3H","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.237 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 2ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3Q","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.236 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 3ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3N","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.237 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3S","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.238 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 30.2758ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3I","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.240 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3Q","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.238 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3P","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.240 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3Q","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.238 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 26.6941ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3L","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.239 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 7.4383ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB3O","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.239 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3T","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.239 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3R","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.239 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3U","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.239 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3V","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.239 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3M","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.240 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB40","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.242 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3T","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.242 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3U","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.242 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB41","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.242 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3U","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.242 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3M","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.242 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB40","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.240 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3N","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.240 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3S","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.241 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 6.5941ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB3Q","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.241 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3O","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.241 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3R","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.241 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3P","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.241 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3V","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.242 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3T","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.243 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 8.2026ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB3P","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.243 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3V","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.242 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB40","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.242 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB41","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.242 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3U","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.243 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3S","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.244 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB40","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.243 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3N","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.244 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB40","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.243 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB3O","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.244 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 11.546ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB3N","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.243 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3P","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.242 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 9.8955ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB3M","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.243 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3R","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.244 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB3P","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.243 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3T","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.243 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB41","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.243 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3V","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.243 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3Q","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.244 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3U","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.244 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3S","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.244 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB3Q","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.244 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB41","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.244 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 30.4832ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3O","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.245 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB41","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.244 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3M","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.244 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3R","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.245 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB42","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.244 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 0ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB40","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.244 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 30.5307ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3P","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.244 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3T","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.244 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3V","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.245 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB43","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.244 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3N","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.244 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3S","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.245 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 30.1588ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3Q","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.246 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB3N","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.246 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 2ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3T","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.245 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB3M","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.245 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 0ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB41","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.245 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 1ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3R","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.245 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB42","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.246 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB40","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.245 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 2ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3U","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.246 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB44","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.246 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 2ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3V","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.246 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 32.6256ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3N","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.246 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 2ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3S","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.246 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB43","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.246 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 33.2063ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3M","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.246 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3T","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.247 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB41","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.247 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB42","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.247 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3R","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.248 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB40","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.248 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3U","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.248 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB45","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.248 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB44","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.248 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3V","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.248 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB43","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.248 -03:00 [INF] Request starting HTTP/1.1 GET http://localhost/api/ordemservico - null null {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB46","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.256 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3U","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.249 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3S","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.249 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3T","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.250 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB41","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.257 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 13.966ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB3T","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.257 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3T","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.257 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3S","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.257 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB46","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.258 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB46","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.250 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB42","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.250 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 6.4127ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB40","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.250 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3R","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.256 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB44","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.257 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 14.6498ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB3U","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.257 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB45","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.257 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB3V","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.257 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB43","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.258 -03:00 [INF] Route matched with {action = "Get", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(System.String, Int32, Int32) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB45","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.258 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB44","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.258 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB43","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.258 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB44","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.259 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 15.4769ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB3R","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.258 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB46","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.259 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3R","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.257 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 12.9946ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB41","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.259 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 0ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB44","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.257 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB3T","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.257 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 13.8108ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB3S","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.258 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB42","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.258 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB40","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.258 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3U","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.259 -03:00 [INF] Iniciando ListarOrdensServicoQuery: {"Filtro":null,"Page":1,"PageSize":10,"$type":"ListarOrdensServicoQuery"} {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB45","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.260 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB40","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.260 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB45","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.260 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB44","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.259 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB3R","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.259 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB41","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.260 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3S","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.261 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 24.2077ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3R","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.261 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB41","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.261 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB3S","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.260 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB3U","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.259 -03:00 [INF] Listando ordens de serviço. Filtro: null, Page: 1, PageSize: 10 {"SourceContext":"LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB46","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.260 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 20.9645ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3T","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.260 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 20.2818ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB40","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.260 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 10ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB42","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.260 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 1ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB45","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.258 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 14.9719ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB3V","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.262 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB42","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.261 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 19.0833ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB41","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.262 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB45","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.261 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 22.2369ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3U","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.261 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB44","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.261 -03:00 [INF] Request starting HTTP/1.1 POST http://localhost/api/ordemservico - application/json; charset=utf-8 128 {"EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB47","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.263 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 5.0957ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB44","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.261 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 3ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB46","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.259 -03:00 [ERR] Erro em ListarOrdensServicoQuery após 1ms: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider. {"SourceContext":"LegacyProcs.Application.Behaviors.LoggingBehavior","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB43","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
2025-10-18 23:27:53.262 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB3V","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.261 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 23.4339ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3S","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.263 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB42","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.263 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB44","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.264 -03:00 [WRN] Input sanitizado para /api/ordemservico de Unknown. Conteúdo potencialmente malicioso removido. {"SourceContext":"LegacyProcs.Infrastructure.Middleware.InputSanitizationMiddleware","RequestId":"0HNGEMSD0AB47","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.264 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB44","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.264 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 15.1649ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB42","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.265 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 18.863ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB44","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.265 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB42","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.263 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB45","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.264 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB46","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.264 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB3V","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.264 -03:00 [ERR] Erro inesperado ao listar ordens de serviço {"SourceContext":"LegacyProcs.Controllers.OrdemServicoController","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB43","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
System.InvalidOperationException: Services for database providers 'Microsoft.EntityFrameworkCore.SqlServer', 'Microsoft.EntityFrameworkCore.InMemory' have been registered in the service provider. Only a single database provider can be registered in a service provider. If possible, ensure that Entity Framework is managing its service provider by removing the call to 'UseInternalServiceProvider'. Otherwise, consider conditionally registering the database provider, or maintaining one service provider per database provider.
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(IServiceProvider scopedProvider, DbContextOptions contextOptions, DbContext context)
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_Provider()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, Expression expression, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ExecuteAsync[TSource,TResult](MethodInfo operatorMethodInfo, IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at LegacyProcs.Infrastructure.Repositories.OrdemServicoRepository.GetPagedAsync(Int32 page, Int32 pageSize, String filtro) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Infrastructure\Repositories\OrdemServicoRepository.cs:line 63
   at LegacyProcs.Application.Queries.ListarOrdensServicoQueryHandler.Handle(ListarOrdensServicoQuery request, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Queries\ListarOrdensServicoQueryHandler.cs:line 31
   at LegacyProcs.Application.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\LoggingBehavior.cs:line 28
   at LegacyProcs.Application.Behaviors.ValidationBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Application\Behaviors\ValidationBehavior.cs:line 37
   at LegacyProcs.Controllers.OrdemServicoController.Get(String filtro, Int32 page, Int32 pageSize) in C:\Users\pagam\OneDrive\Documentos\GitHub\Trabalho\TesteTimeLegado\backend\LegacyProcs\Controllers\OrdemServicoController.cs:line 70
2025-10-18 23:27:53.265 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB42","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.265 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 6.5631ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB45","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.266 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 26.7526ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB3V","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.266 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB45","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.266 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 21.4754ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB42","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.266 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB46","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.266 -03:00 [INF] Executing ObjectResult, writing value of type 'System.String'. {"EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d6658b51-a63e-4184-8939-af93741db59b","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)","RequestId":"0HNGEMSD0AB43","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.266 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB45","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.267 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 8.8842ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB46","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.267 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs) in 10.1102ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB43","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.267 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 18.7055ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB45","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.267 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB43","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.267 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Get (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB46","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.267 -03:00 [INF] Executing endpoint 'LegacyProcs.Controllers.OrdemServicoController.Post (LegacyProcs)' {"EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB47","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.267 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB43","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.267 -03:00 [WRN] Resposta com erro 500 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB46","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.268 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 22.1668ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB43","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.268 -03:00 [INF] Request finished HTTP/1.1 GET http://localhost/api/ordemservico - 500 null text/plain; charset=utf-8 19.1098ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB46","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.272 -03:00 [INF] Route matched with {action = "Post", controller = "OrdemServico"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(LegacyProcs.Controllers.DTOs.OrdemServicoCreateDto) on controller LegacyProcs.Controllers.OrdemServicoController (LegacyProcs). {"EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"1b8d5ea7-494d-4860-b862-2707d790feee","ActionName":"LegacyProcs.Controllers.OrdemServicoController.Post (LegacyProcs)","RequestId":"0HNGEMSD0AB47","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.276 -03:00 [INF] Executed action LegacyProcs.Controllers.OrdemServicoController.Post (LegacyProcs) in 4.3006ms {"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HNGEMSD0AB47","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.276 -03:00 [INF] Executed endpoint 'LegacyProcs.Controllers.OrdemServicoController.Post (LegacyProcs)' {"EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HNGEMSD0AB47","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.276 -03:00 [WRN] Resposta com erro 400 para /api/ordemservico de Unknown {"SourceContext":"LegacyProcs.Infrastructure.Middleware.SecurityHeadersMiddleware","RequestId":"0HNGEMSD0AB47","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
2025-10-18 23:27:53.277 -03:00 [INF] Request finished HTTP/1.1 POST http://localhost/api/ordemservico - 400 null application/problem+json; charset=utf-8 15.3624ms {"EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HNGEMSD0AB47","RequestPath":"/api/ordemservico","Application":"LegacyProcs","Environment":"Production"}
